{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(leaflet)\nlibrary(rjson)\nlibrary(rgdal)\n\ndatasets <- fromJSON(readLines(\"https://data.boston.gov/api/3/action/package_search?q=geojson&rows=60\"))$result$results\ntitles <- lapply(datasets, function(x){\n  return (x$title)\n})\nurls <- lapply(datasets, function(x){\n  return (x$resources[[1]]$url)\n})\ndata <- setNames(urls,titles)\ndata <- data[order(names(data))]\n\nui <- bootstrapPage(\n  tags$style(type = \"text/css\", \"html, body {width:100%;height:100%}, panel {padding:10px}\"),\n  leafletOutput(\"map\", width = \"100%\", height = \"100%\"),\n  absolutePanel(id = \"controls\", class = \"panel panel-default\", fixed = TRUE,\n                draggable = TRUE, top = 60, left = \"auto\", right = 20, bottom = \"auto\",\n                width = 330, height = \"auto\",\n                h2(\"Data Explorer\"),\n                selectInput(\"data\", \"Data Set\", titles, selected = \"Charging Stations\")\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  jsonData <- reactive({\n    readOGR(as.character(data[input$data]), \"OGRGeoJSON\")\n  })\n  \n  output$map <- renderLeaflet({\n    leaflet() %>%\n      # the styling of the map itself\n      addProviderTiles(providers$CartoDB.Positron,\n                       options = providerTileOptions(noWrap = TRUE)\n      ) %>%\n      # centering the view on a specific location (Boston)\n      setView(lng = -71.0589, lat = 42.3, zoom = 12) %>%\n      # adding the markers\n      # adding the zones\n      addMarkers(data = jsonData())\n  })\n}\n\nshinyApp(ui, server)",
    "created" : 1499456653992.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2444464",
    "id" : "EB215F97",
    "lastKnownWriteTime" : 1499457021,
    "last_content_update" : 1499457021965,
    "path" : "~/Documents/Boston Fellows/dataPortal/examples/AllDataSets.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}